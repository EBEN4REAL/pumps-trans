export const ENGLISH_TRANSLATIONS = {
    text: {
        // Products In Portal
        products: {
            total: 'TOTAL'
        }, 
        // Vue-ctk-date-picker
        calendar: {
            today: 'Today',
            yesterday: 'Yesterday',
            last7Days: 'Last 7 Days',
            lastWeek: 'Last Week',
            last30Days: 'Last 30 Days',
            lastMonth: 'Last Month',
            dateRange: 'Select a Date Range',
            selectDate: 'Select a Date',
            selectDateAndTime: 'Select schedule date and time'
        },
        // Action Buttons For Table
        actionButtons: {
            title: 'Action',
            edit: 'Edit',
            delete: 'Delete'
        },
        // Password Prompt 
        passwordPrompt: {
            pleaseInput: 'Please input your password',
            cancel: 'Cancel',
            submit: 'Submit',
            password: 'Password'
        },
        // And Text
        and: {
            text: 'and',
        },
        of: {
            text: 'of'
        },
        for: {
            text: 'for'
        },
        units: {
            litres: 'Ltrs',
        },
        errors: {
            emailMissing: 'Please input an email',
            invalidEmail: 'Invalid Email Format',
            firstNameMissing: 'Please input a First Name',
            lastNameMissing: 'Please input a Last Name',
            passwordMissing: 'Please input your password',
            priceFieldMissing: 'Please input a price',
            productMissing: 'Please select a product',
            contactNameMissing: 'Please input a contact name',
            cityMissing: 'Please input a city',
            streetMissing: 'Please input a street',
            stateMissing: 'Please select a state',
            contactPhoneMissing: 'Please input a phone number',
            shortPhoneNumber: 'Phone number should be between 10 and 13 digits',
            shortPassword: 'Password should be between 6 and 100 characters',
            accountNameMissing: 'Please input an account name',
            accountNumberMissing: 'Please input an account number',
            dateMissing: 'Please select a date',
            invalidPrice: 'Please input a price greater than 0'
        },
        /***Company Portal */

        // Company Master Layout  
        cMasterLayout: {
            dashboard: 'Dashboard',
            stationManagement: 'Station Management',
            priceManagement: 'Price Management', 
            updatePrice: 'Update Price',
            report: 'Report',
            companySales: 'Company Sales',
            sales: 'Sales',
            varianceReport: 'Variance Report',
            tanksFilledReport: 'Tanks Filled Report',
            posReport: 'POS Transactions Report',
            peddlingManagement: 'Peddling Management',
            peddling: 'Peddling',
            orders: 'Orders',
            products: 'Products',
            manageDrivers: 'Manage Drivers',
            manageTrucks: 'Manage Trucks',
            ourDealers: 'Our Dealers',
            retailOutlets: 'Retail Outlets',
            corporateCustomers: 'Corporate Customers',
            retainership: 'Retainership',
            walletFundRequest: 'Wallet Fund Request',
            customers: 'Customers',
            manageExpenses: 'Manage Expenses',
            expenses: 'Expenses',
            categories: 'Expense Categories',
            bankAccounts: 'Bank Accounts',
            zones: 'Zones',
            outstandingPayments: 'Outstanding Payments',
            payments: 'Payments',
            signOut: 'Sign Out',
            confirmLogout: 'Do you really want to logout?',
            profile: 'Profile',
        },
        // Company Dashboard
        cDashboard: {
            salesVTarget: 'Sales vs Target',
            dealers: 'Dealers',
            branches: 'Branches',
            tanksFilled: 'Tanks Filled',
            totalPumps: 'Total Number Of Pumps',
            disconnectedPumps: 'Number Of Disconnected Pumps',
            offlinePumps: 'Number Of Pumps Offline',
            lowTanksTitle: 'Tanks with less than 30% of their capacity',
            curVolume: 'Current Volume',
            maxVolume: 'Maximum Volume',
            showAllButton: 'Show All',
            todaySalesTransactions: 'Company Sales Transactions Today',
            branch: 'Branch',
            productVolume: 'Volume (ltr)',
            productAmount: 'Amount {currency}',
            total: 'Total {currency}',
        },
        // Company disconnected pumps
        cDisconnectedPumps: {
            title: 'Disconnected Pumps',
            deviceId: 'Device Id',
            pump: 'Pump',
            branchName: 'Branch Name',
            date: 'Date'
        },
        // Company offline pumps
        cOfflinePumps: {
            title: 'Offline Pumps',
            deviceId: 'Device Id',
            nozzles: 'Nozzles (If Pump)',
            branchName: 'Branch Name',
            lastDate: 'Last Date'
        },
        // Our Dealers
        dealers: {
            title: 'Our Dealers',
            details: 'Details',
            branches: 'Branches', 
            searchDealers: 'Search Dealers'
        },
        // Dealer Details 
        dealerDetails: {
            title: 'Dealer Details',
            street: 'Street',
            city: 'City',
            state: 'State',
            goBack: 'Go Back To Dealers', 
            street: 'Street',
            city: 'City',
            state: 'State'
        },
        // Driver

        // Assign Truck
        assignTruck: {
            title: 'Trucks',
            assignTruck: 'Assign Truck',
            truckName: 'Truck Name',
            plateNumber: 'Plate Number', 
            tankType: 'Tank Type',
            capacity: 'Capacity',
            successfullyAssignedTruck: 'Successfully Assigned Truck',
            failedToAssign: 'Failed To Assign Truck'
        }, 
        // Assigned Orders
        assignedOrders: {
            title: 'Assigned Orders',
            companyName: 'Company Name',
            contactName: 'Contact Name',
            contactPhone: 'Contact Phone',
            driverName: 'Driver Name',
            state: 'State',
            quantity: 'Quantity',
            status: 'Status',
            product: 'Product',
            successfullyAssignedTruck: 'Successfully Assigned Truck',
            failedToAssign: 'Failed To Assign Truck'
        },
        // Assigned Truck
        assignedTruck: {
            title: 'Assigned Truck | Assigned Trucks',
            truckName: 'Truck Name', 
            plateNumber: 'Plate Number',
            tankType: 'Tank Type',
            capacity: 'Capacity'
        },
        // Manage Drivers
        manageDrivers: {
            title: 'Company Driver | Company Drivers',
            addDriver: 'ADD DRIVER',
            fullName: 'Full Name',
            email: 'Email',
            phoneNo: 'Phone No.',
            assignedOrders: 'Assigned Orders',
            assignTruck: 'Assign Truck',
            assignedTrucks: 'Assigned Trucks',
            successfullyDeletedDriver: 'Successfully deleted driver',
            failedToDelete: 'Failed To Delete Driver',
            confirmDelete: 'Are you sure you want to delete this driver?'
        },
        // Manage Trucks
        manageTrucks: {
            title: 'Company Truck | Company Trucks',
            addTruck: 'ADD TRUCK',
            truckName: 'Truck Name',
            plateNumber: 'Plate Number',
            tankType: 'Tank Type', 
            capacity: 'Capacity',
            successfullyDeletedTruck: 'Successfully deleted Truck',
            failedToDelete: 'Failed To Delete Truck',
            confirmDelete: 'Are you sure you want to delete this truck?'
        },

        // Fund Wallet Request
        fundWalletRequest: {
            title: 'Wallet Fund Request',
            showAll: 'Show All',
            approved: 'Approved',
            pending: 'Pending',
            depositorsName: `Depositor's Name`,
            amountPaid: 'Amount Paid',
            bankName: 'Bank name',
            depositSlipNo: 'Deposit Slip No.',
            datePaid: 'Date Paid', 
            requestDate: 'Request Date', 
            walletCredited: 'Wallet Credited',
            approveRequest: 'Approve Request',
            successfullyApproved: 'Successfully Approved Fund Request'
        },
        // Branch 
        branch: {
            title: 'Retail Outlets',
            dealer: 'Dealer',
            name: 'Name',
            city: 'City',
            state: 'State',
            details: 'Details',
            mailRecipient: 'Mail Recipient',
            manageTargets: 'Manage Targets',
            mapUserToBranch: 'Map User To Retail Outlet',
        },
        // Mail Recipient 
        mailRecipient: {
            title: 'Mail Recipients',
            addRecipient: 'Add Recipient To Branch',
            add: 'Add',
            emailPlaceholder: 'Email *',
            phonePlaceholder: 'Phone',
            email: 'Email',
            phone: 'Phone Number',
            successfullyRemoved: 'Successfully removed Mail Recipient',
            successfullyAdded: 'Successfully Added Mail Recipient',
            confirmDelete: 'Are you sure you want to delete this recipient?'
        },
        // Targets
        targets: {
            title: 'Targets',
            branchTargets: 'Retail Outlet Targets',
            createTarget: 'Create Target',
            product: 'Product',
            quantity: 'Quantity',
            emptyTarget: `You currently don't have any target record`,
            editTarget: 'Edit Target',
            deleteTarget: 'Delete Target',
            confirmDelete: 'Are you sure you want to delete this target?',
            successfullyDeleted: 'Target deleted successfully',
            targetNotFound: `We couldn't find an existing Product Target to be removed, or it has already been removed`,
            unsuccessfulDelete: 'Failed to delete target'
        },
        // Manage Expenses Section
        // Bank Accounts
        bankAccounts: {
            noOfBankAccounts: 'Number of Bank Accounts',
            bankName: 'Bank Name',
            selectBankName: 'Select a Bank Name',
            accountNumber: 'Account Number',
            inputAccountNumber: 'Account Number',
            accountName: 'Account Name', 
            inputAccountName: 'Account Name',
            save: 'Save',
            name: 'Name',
            accountNo: 'Account No.',
            delete: 'Delete',
            emptyBankRecord: `You currently don't have any Bank Account record`,
            selectBankError: 'Please select a bank',
            bankAdded: 'Bank Account successfully added',
            confirmDelete: 'Are you sure you want to delete this account?',
            successfullyDeleted: 'Bank Account successfully deleted',
            unsuccessfulDelete: 'Unable to delete bank account'
        },
        // Categories
        categories: {
            title: 'Categories',
            createCategory: 'Create Category',
            inputCategoryPlaceholder: 'Input Category',
            create: 'Create',
            category: 'Category',
            dateCreated: 'Date Created',
            confirmDelete: 'Are you sure you want to delete this category?',
            successfullyDeleted: 'Successfully deleted category',
            unsuccessfulDelete: 'Failed to delete category',
            successfullyAdded: 'Successfully added category',
            inputCategory: 'Please input a category'
        },
        // Manage Expenses
        manageExpenses: {
            totalExpenses: 'Number Of Expenses',
            title: 'Manage Expenses',
            companyExpensesBetween: 'Company Expenses Between',
            expensesBreakdown: 'Expenses Breakdown',
            income: 'Income',
            expenses: 'Expenses',
            retailOutlets: 'Retail Outlets',
            amount: 'Amount',
            account: 'Account',
            successfullyDeleted: 'Successfully deleted category',
            unsuccessfulDelete: 'Failed To Delete Category',
            confirmDelete: 'Are you sure you want to delete this category?'
        },
        // Orders Section 
        // Add Order 
        addOrder: {
            title: 'Create Order',
            orderInformation: 'Order Information',
            quantity: 'Quantity',
            contactName: 'Contact Name',
            paymentMode: 'Payment Mode',
            cash: 'Cash',
            cheque: 'Cheque',
            transfer: 'Transfer',
            paid: 'Paid',
            true: 'True',
            false: 'False',
            deliveryHours: 'Delivery Hours',
            product: 'Product', 
            selectAProduct: 'Select a product',
            contactInformation: 'Contact Information',
            street: 'Street',
            city: 'City',
            state: 'State',
            contactPhone: 'Contact Phone',
            phonePlaceholder: 'Phone No.',
            productMissing: 'Please select a product',
            quantityMissing: 'Please input a quantity',
            deliveryHoursMissing: 'Please input a delivery hour',
            successfullyCreated: 'Successfully created order',
            unsuccessfullyCreated: 'Failed to add order'
        },
        // Assign Driver
        assignDriver: {
            drivers: 'Drivers',
            title: 'Assign Driver',
            fullName: 'Full Name',
            email: 'Email',
            phoneNo: 'Phone No.', 
            successfullyAssigned: 'Successfully assigned driver',
            unsuccessfullyAssigned: 'Failed to assign driver'
        },
        // Edit Order
        editOrder: {
            title: 'Edit Order',
            orderInformation: 'Order Information',
            quantity: 'Quantity',
            contactName: 'Contact Name',
            status: 'Status',
            driverAssigned: 'Driver Assigned',
            paymentPending: 'Payment Pending',
            paymentCompleted: 'Payment Completed',
            paymentConfirmed: 'Payment Confirmed',
            orderCompleted: 'Order Completed',
            orderAccepted: 'Order Accepted',
            orderRejected: 'Order Rejected',
            processing: 'Processing',
            inTransit: 'In Transit',
            arrived: 'Arrived',
            ownerAccepted: 'Owner Accepted',
            fillStarted: 'Fill Started',
            fillEnded: 'Fill Ended',
            product: 'Product',
            selectAStatus: 'Select A Status',
            selectAProduct: 'Select A Product',
            contactInformation: 'Contact Information',
            street: 'Street',
            city: 'City',
            state: 'State',
            contactPhone: 'Contact Phone',
            phonePlaceholder: 'Phone No.',
            updateOrder: 'Update Order',
            quantityMissing: 'Please input a quantity',
            deliveryHoursMissing: 'Please input a delivery hour',
            successfullyUpdated: 'Successfully updated order'
        },
        // Manage Orders 
        manageOrders: {
            title: 'Orders',
            showAll: 'Show All',
            driverAssigned: 'Driver Assigned',
            paymentPending: 'Payment Pending',
            paymentCompleted: 'Payment Completed',
            paymentConfirmed: 'Payment Confirmed',
            orderCompleted: 'Order Completed',
            orderAccepted: 'Order Accepted',
            orderRejected: 'Order Rejected',
            processing: 'Processing',
            inTransit: 'In Transit',
            arrived: 'Arrived',
            ownerAccepted: 'Owner Accepted',
            fillStarted: 'Fill Started',
            fillEnded: 'Fill Ended',
            orderStatusFilter: 'Order Status Filter',
            contactName: 'Contact Name',
            contactPhone: 'Contact Phone',
            status: 'Status',
            quantity: 'Quantity',
            city: 'City',
            state: 'State',
            assignDriver: 'Assign Driver',
            editOrder: 'Edit Order',
            updateStatus: 'Update Status',
            confirmDelete: 'Are you sure you want to delete this order?',
            successfullyDeleted: 'Successfully deleted order',
            unsuccessfulDelete: 'Failed to delete order'
        },
        // Company Price Management
        priceManagement: {
            title: 'Change Price',
            priceChangeLog: 'Price Change Log',
            companyPriceUpdate: 'Company Price Update',
            selectZone: 'SELECT ZONE | select zone',
            selectProduct: 'SELECT PRODUCT',
            newPrice: 'NEW PRICE | New price',
            retailOutlets: 'Retail Outlets',
            searchRetailOutlets: 'Search Retail Outlets',
            selectAllRetailOutlets: 'Select All Retail Outlets',
            updateNow: 'Update Now',
            scheduleUpdate: 'Schedule Update',
            recentlyUpdated: 'Recently Updated',
            formerPrice: 'Former Price',
            updatedPrice: 'Updated Price',
            viewMore: 'View More',
            branchName: 'Branch Name', 
            product: 'Product',
            currentPrice: 'Current Price',
            previousPrice: 'Previous Price',
            changedBy: 'Changed By', 
            date: 'Date',
            password: 'Password',
            cancel: 'Cancel',
            submit: 'Submit',
            selectProductSmall: 'Select Product',
            selectBranch: 'Please select at least one retail outlet',
            successfullyChanged: 'Successfully changed price',
            putPassword: 'Please input your password'
        },
        // Product
        // Add Product
        addProduct: {
            title: 'Add Product',
            productInformation: 'Product Information', 
            product: 'Product',
            selectAProduct: 'Select A Product',
            price: 'Price',
            state: 'State',
            localGovArea: 'Local Government Area',
            localGov: 'Local Government',
            deliveryHour: 'Delivery Hour',
            addMore: 'Add More',
            addProduct: 'Add Product',
            selectLGA: 'Please select an LGA',
            deliveryHourMissing: 'Please input a delivery hour',
            successfullyAdded: 'Successfully added product',
            invalidDeliveryHour: 'Please input a valid delivery hour'
        },
        // Products
        deliverableProducts: {
            totalDeliverableProd: 'Total Deliverable Product | Total Deliverable Products',
            addProduct: 'Add Product',
            productName: 'Product Name',
            price: 'Price',
            state: 'State',
            noOfDeliverableLGAs: 'No. of deliverable LGAs', 
            manageLGAs: 'Manage LGAs',
            confirmDelete: 'Are you sure you want to delete this product?',
            successfullyDeleted: 'Successfully deleted product',
            unsuccessfulDelete: 'Failed to delete product'
        },
        // Product LGAs
        productLGA: {
            title: 'LGAs',
            localGovAreas: 'Local Government Areas',
            lgaName: 'LGA Name',
            deliveryHour: 'DeliveryHour'
        },
        // Profile
        profile: {
            accountSettings: 'Account Settings',
            email: 'Email',
            firstName: 'First Name',
            lastName: 'Last Name',
            phoneNumber: 'Phone Number',
            editProfile: 'Edit Profile',
            changeYourPassword: 'Change Your Password',
            oldPassword: 'Old Password',
            newPassword: 'New Password',
            confirmPassword: 'Confirm Password',
            passwordMustContain: 'Password Must Contain',
            oneNumeric: 'One Numeric Character',
            specialCharacter: 'One Special Character',
            changePassword: 'Change Password',
            successfullyChanged: 'Successfully changed Password!',
            fillIn: 'Fill in the missing Fields', 
            updated: 'Profile updated successfully',
            passwordBlank: 'Password field cannot be blank',
            passwordsDontMatch: `Passwords don't match`
        },
        // Retainerhip
        companyRetainership: {
            title: 'Retainership',
            addExisting: 'Add Existing',
            addNew: 'Add New Retainership',
            firstName: 'First Name',
            lastName: 'Last Name',
            email: 'Email',
            balance: 'Balance',
            creditLimit: 'Credit Limit',
            walletTransactions: 'Wallet Transactions'
        },
        // Wallet Transactions 
        walletTransactions: {
            title: 'Wallet Transactions',
            transBetween: 'Wallet Transactions Between',
            date: 'Date',
            status: 'Status',
            amount: 'Amount',
            currentBalance: 'Current Balance'
        },
        // Company Sales Report
        sales: {
            table: 'Table',
            chart: 'Chart',
            companySales: 'Company Sales',
            salesReport: 'Company Sales Report Between',
            branch: 'Branch',
            vol: 'Vol (ltr)',
            amount: 'Amt {currency}',
            total: 'Total {currency}',
            totalVolumeSold: 'Total Number of Volume sold by branches',
            totalVolumeForDealers: 'Total Volumes of Products sold by Dealers'
        },
        // Company Tanks Filled Report
        tanksFilledReport: {
            title: 'Tanks Filled',
            tanksFilledOn: 'Tanks Filled On',
            branchName: 'Branch Name',
            tankName: 'Tank name',
            eVolumeDischarged: 'Epump Volume Discharged(ltr)',
            mVolumeDischarged: 'Manual Volume Discharged(ltr)',
            variance: 'Variance',
            eStartVolume: 'Epump Start Volume(ltr)',
            eVolumeEnd: 'Epump End Volume(ltr)',
            mStartVolume: 'Manual Start Volume(ltr)',
            mEndVolume: 'Manual End Volume(ltr)',
            startTime: 'Start Time',
            endTime: 'End Time',
            noTanksFilledOn: 'No Tanks Filled On'
        },
        // Company Variance Report
        varianceReport: {
            totalTransactions: 'Total Transactions',
            showAll: 'Show All',
            productFilter: 'Product Filter',
            title: 'Variance Report',
            eVolumeSold: 'Epump Volume Sold',
            mVolumeSold: 'Manual Volume Sold',
            variance: 'Variance',
            total: 'TOTAL',
            reportBetween: 'Company Variance Report Between',
            date: 'Date/Time',
            branch: 'Branch',
            product: 'Product',
            eVolumeSoldLtr: 'Epump Volume Sold(ltr)',
            mVolumeSoldLtr: 'Manual Volume Sold(ltr)',
            varianceLtr: 'Variance(ltr)'
        },
        // AssignBranch In Zones
        assignBranch: {
            retailOutlets: 'Retail Outlets',
            title: 'Assign Retail Outlets',
            retailOutletName: 'Retail Outlet Name',
            city: 'City',
            state: 'State',
            successfullyAssigned: 'Successfully assigned Retail Outlet',
            assignOutlet: 'Assign Outlet'
        },
        // Zones 
        zones: {
            createAZone: 'Create a zone',
            zoneName: 'Zone Name',
            createZone: 'CREATE ZONE',
            outletsAssigned: 'Number of retail outlets assigned',
            dateCreated: 'Date Created',
            viewOutlets: 'View Outlets',
            assignOutlets: 'Assign Outlets',
            pleaseInputZone: 'Please input a zone',
            successfullyCreatedZone: 'Successfully created Zone',
            successfullyDeleted: 'Successfully deleted zone',
            unsuccessfulDelete: 'Failed to delete zone',
            confirmDelete: 'Are you sure you want to delete this zone?'
        },
        // Branches in zone
        zoneBranches: {
            assignedOutlets: 'Assigned Retail Outlets',
            zonesOutlets: `Zone's Assigned Retail Outlets`,
            outletName: 'Retail Outlet Name',
            city: 'City',
            state: 'State',
            unassignOutlet: 'Unassign Outlet',
            successfullyUnassigned: 'Successfully unassigned Retail Outlet',
            branchMissing: 'Please input a branch',
        },


        /****Branch Portal */
        
        // Branch Master Layout 
        bMasterLayout: {
            companyDashboard: 'Company Dashboard',
            dashboard: 'Dashboard',
            report: 'Reports',
            salesTransactions: 'Sales Transactions',
            varianceReport: 'Variance Report', 
            productSummary: 'Product Summary',
            endOfDayReport: 'End of the day Report',
            tankReport: 'Tank Report',
            tanksFilledReport: 'Tanks Filled Report',
            posReport: 'POS Transactions Report',
            tanks: 'Tanks',
            pumps: 'Pumps',
            stationManagement: 'Station Management',
            updatePrice: 'Update Price',
            pumpFaults: 'Pump Faults',
            pumpMaintenance: 'Pump Maintenance',
            eChannel: 'E-channel',
            eSales: 'E-sales',
            settlementAccount: 'Settlement Account',
            accounting: 'Accounting',
            expenses: 'Expenses',
            bankAccounts: 'Bank Accounts',
            peopleManagement: 'People Management',
            people: 'People',
            staff: 'Staff', 
            shift: 'Shift',
            profile: 'Profile',
            signOut: 'Sign Out',
            confirmLogout: 'Do you really want to logout?'
        },
        // Branch Dashboard
        bDashboard: {
            salesVTarget: 'Sales vs Target',
            tanksInStation: 'Tanks In Station',
            pumpsInStation: 'Pumps In Station',
            tanksFilled: 'Tanks Filled In Station',
            pumpsAvgTime: 'Pumps Average Time per Litre',
            secs: 'secs',
            estimatedPumpsCalibration: 'Estimated Pumps Calibration',
            pumpsFault: 'Pumps Fault',
            disconnectedPumps: 'Number Of Disconnected Pumps',
            offlinePumps: 'Number Of Pumps Offline',
            hourlyTransactions: 'Hourly Transactions By Volume',
            productGuage: 'Product Guage',
            tanksStock: 'Tanks Stock Per Hour'
        },
        // Branch disconnected pumps
        bDisconnectedPumps: {
            title: 'Disconnected Pumps',
            deviceId: 'Device Id',
            pump: 'Pump',
            date: 'Date'
        },
        // Branch offline pumps
        bOfflinePumps: {
            title: 'Offline Pumps',
            deviceId: 'Device Id',
            nozzles: 'Nozzles (If Pump)',
            lastDate: 'Last Date'
        },
        // Pumps average time per litre
        avgTimePerLitre: {
            title: 'Pumps Average Time per Litre',
            displayName: 'Display Name',
            avgTimePerLitre: 'Average Time per Litre(Secs)',
            totalTime: 'Total Time',
            totalSale: 'Total Sale(Ltr)',
            date: 'Date'
        },
        // Pumps calibration
        pumpsCalibration: {
            title: 'Pumps Calibration',
            calibrationRatio: 'Calibration Ratio',
            pumpName: 'Pump Name'
        },
        // Bank Accounts
        bBankAccounts: {
            noBankAccts: 'Number of Bank Accounts',
            bankName: 'Bank Name',
            selectBankName: 'Select a Bank',
            accountNumber: 'Account Number',
            accountName: 'Account Name',
            inputAccountNumber: 'Account Number',
            inputAccountName: 'Account Name',
            save: 'Save',
            name: 'Name',
            accountNo: 'Account No.',
            delete: 'Delete', 
            emptyBankRecord: `You currently don't have any Bank Account record`,
            confirmDelete: 'Are you sure you want to delete this account?',
            selectBankError: 'Please select a bank',
            bankAdded: 'Successfully Added Bank Account',
            successfullyDeleted: 'Successfully Deleted Bank Account',
            unsuccessfulDelete: 'Unable to delete bank account'
        },
        // Branch Expenses: 
        bExpenses: {
            title: 'Branch Expenses',
            recordExpenses: 'Record Expenses',
            amount: 'Amount',
            recipient: 'Recipient',
            description: 'Description',
            recordExpense: 'Record Expense',
            dateTime: 'Date/Time',
            descriptionMissing: 'Please input a description',
            amountMissing: 'Please input an amount',
            successfullyRecorded: 'Successfully recorded Expense',
            unsuccessfulRecord: 'Unable to add expense',
            accountNumberMissing: `You currently don't have a bank account, please add an account first, in order to record expenses`
        },
        // Branch Wallet
        bWallet: {
            walletBalance: 'Wallet Balance',
            title: 'Branch Wallet', 
            date: 'Date',
            voucherPin: 'Voucher Pin',
            amountSpent: 'Amount Spent',
            product: 'Product'
        }, 
        // End of day report
        endOfDayReport: {
            title: 'End of the day Report',
            hours: 'hours',
            totalVolumeSold: 'Total Volume Sold',
            totalRtt: 'Total RTT',
            totalSales: 'Total Sales',
            totalCashSale: 'Total Cash Sale',
            epumpSales: 'Epump Sale',
            retainershipSales: 'Retainership Sale',
            accountSummary: 'Account Summary',
            cashSales: 'Cash Sales',
            cashAtHand: 'Cash At Hand',
            cashToBank: 'Cash To Bank',
            pos: 'POS',
            returnToTank: 'Return To Tank',
            expense: 'Expense',
            salesSummary: 'Sales Summary',
            pumpSales: 'Pump Sales',
            tankSales: 'Tank Sales',
            operatingHours: 'Operating Hours',
            surplus: 'Surplus',
        },
        // People Management
        // Edit Staff, Add Staff and View Staff
        editStaff: {
            title: 'Edit Staff',
            personalInformation: 'Personal Information',
            firstName: 'First Name',
            lastName: 'Last Name',
            cardName: 'Card Name',
            dateOfBirth: 'Date of Birth',
            gender: 'Gender',
            male: 'Male',
            female: 'Female',
            email: 'Email',
            contactInformation: 'Contact Information',
            streetAddress: 'Street Address',
            city: 'City',
            state: 'State',
            country: 'Country',
            phone: 'Phone No.',
            updateStaff: 'Update Staff',
            cardNameMissing: 'Please input a card name',
            dateOfBirthMissing: 'Please select a date of birth',
            genderMissing: 'Please select a gender',
            countryMissing: 'Please input a country',
            successfullyUpdated: 'Successfully updated staff',
            unsuccessfulUpdate: 'Failed to update staff records'
        },
        // Add Staff
        addStaff: {
            title: 'Add New Staff',
            successfullyAdded: 'Successfully Added Staff',
            unsuccessfulAdd: 'Failed to add Staff'
        },
        viewStaff: {
            title: 'Staff Details'
        },
        // Staff
        staff: {
            noOfStaffs: 'Number of Staffs',
            addNew: 'Add New',
            fuelCard: 'Fuel Card',
            gender: 'Gender',
            view: 'View',
            edit: 'Edit',
            delete: 'Delete',
            noStaff: 'No Staff created yet',
            confirmDelete: 'Are you sure you want to delete this staff?',
            successfullyDeleted: 'Successfully deleted staff',
            unsuccessfulDelete: 'Failed to delete staff'
        },
        // Shift 
        shift: { 
            totalShifts: 'Total Number of Shifts',
            shiftDetails: 'Shift Details',
            addShift: 'Add Shift',
            shiftName: 'Shift Name | SHIFT NAME',
            addShift: 'Add Shift',
            startTime: 'Start Time',
            endTime: 'End Time',
            status: 'Status',
            enterShift: 'Enter Shift',
            shiftMissing: 'Please input a shift',
            successfullyCreated: 'Successfully created Shift',
            unsuccessfullyCreated: 'Failed to add Shift',
            assignments: 'Assignments',
            deposits: 'Deposits',
        },
        // Shift Assignments
        shiftAssignments: {
            totalShiftAss: 'Total Shift Assignments',
            shiftAss: 'Shift Assignments',
            pumpName: 'Pump Name',
            staffName: 'Staff Name',
            openingReading: 'Opening Reading | OPENING READING',
            closingReading: 'Closing Reading',
            startNew: 'Start New Shift',
            pump: 'PUMP',
            selectPump: 'Select Pump',
            staff: 'STAFF',
            chooseStaff: 'Choose Staff',
            assignShift: 'Assign Shift',
            openingReadingMissing: 'Please input an opening Reading',
            staffMissing: 'Please choose a staff',
            pumpMissing: 'Please select a pump',
            successfullyAssigned: 'Successfully assigned Shift',
            unsuccessfullyAssigned: 'Failed to assign Shift'
        },
        // Shift Deposits
        shiftDeposits: {
            totalShiftDeposit: 'Total Shift Deposits',
            shiftDeposits: 'Shift Deposit | Shift Deposits',
            bank: 'Bank',
            amount: 'Amount',
            balance: 'Balance',
            tellerNumber: 'Teller Number',
            selectBank: 'Select Bank',
            submit: 'Submit',
            selectPump: 'Select Pump',
            chooseStaff: 'Choose Staff',
            bankMissing: 'Please select a bank',
            amountMissing: 'Please input an amount',
            tellerMissing: 'Please input a valid teller number',
            successfullyCreated: 'Successfully creatd Shift Deposit',
            unsuccessfullyCreated: 'Failed to create Shift Deposit',
            amountZeroError: 'Please input an amount greater than 0'
        },
        // Product Summary
        productSummary: {
            totalTransactions: 'Total Transactions',
            title: 'Product Summary',
            total: 'TOTAL',
            transBtw: 'Products Summary between',
            date: 'Date',
            productVolume: 'Volume (ltr)',
            productAmount: 'Amount {currency}',
            total: 'Total',
            totalAmount: 'Total Amount'
        },
        // Branch Profile
        bProfile: {
            accountSettings: 'Account Settings',
            email: 'Email',
            firstName: 'First Name',
            lastName: 'Last Name',
            phoneNumber: 'Phone Number',
            editProfile: 'Edit Profile',
            changeYourPassword: 'Change Your Password',
            oldPassword: 'Old Password',
            newPassword: 'New Password',
            confirmPassword: 'Confirm Password',
            passwordMustContain: 'Password Must Contain',
            oneNumeric: 'One Numeric Character',
            specialCharacter: 'One Special Character',
            changePassword: 'Change Password',
            successfullyChanged: 'Successfully changed Password!',
            fillIn: 'Fill in the missing Fields', 
            updated: 'Profile updated successfully',
            passwordBlank: 'Password field cannot be blank',
            passwordsDontMatch: `Passwords don't match`
        },
        // Pumps 
        pumps: {
            showAll: 'Show All',
            installedPumps: 'Installed Pumps',
            lastReading: 'Last Reading',
            manufacturer: 'Manufacturer',
            sourceTank: 'Source Tank',
            details: 'Details',
            noPumpsAdded: 'No Pump Added',
            transactions: 'Transactions',
        },
        // Pump Transactions
        pumpTransactions: {
            totalTransactions: 'Total Transactions',
            title: 'Pump Transactions',
            totalVolume: 'Total Volume of products',
            totalNumber: 'Total Number of Transactions',
            avgLitres: 'Average Litres per Transaction',
            branchSales: 'Retail Outlet Pump transactions between',
            dateTime: 'Date/Time',
            pumpName: 'Pump Name',
            productName: 'Product Name',
            pricePerLitre: 'Price / Litre',
            openingReading: 'Opening Reading',
            closingReading: 'Closing Reading',
            priceSoldCash: 'Price Sold Cash',
            volumeDispensed: 'Volume Dispensed',
            dispensedBy: 'Dispensed By',
            salesType: 'Sales Type'
        },
        // Pump Details
        pumpDetails: {
            details: 'Details',
            pumpDisplayName: 'Pump Display Name',
            associateTank: 'Associate Tank',
            pumpCalibration: 'Pump Calibration xtr-20ltr',
            manufacturer: 'Pump Manufacturer',
            pumpModel: 'Pump Model',
            pumpStatus: 'Pump Status',
            title: 'Pump Details',
            pumpName: 'Pump Name',
            associatePumpToTank: 'Associate Pump to Tank',
            pumpReading: 'Pump Reading',
            throughput: 'Pump Average Throughput / Product Average Throughput for 7 days',
            throughputPlaceholder: 'Pump Throughput'
        },
        // Pumps Fault 
        pumpsFault: {
            total: 'Total Pump Faults',
            showAll: 'Show All',
            pending: 'Pending',
            fixing: 'Fixing',
            fixed: 'Fixed', 
            notFixed: 'Not Fixed',
            pumpStatus: 'Pump Status',
            title: 'Pump Faults',
            recordFault: 'Record Fault',
            fault: 'Fault',
            pump: 'Pump',
            selectPump: 'Select Pump',
            status: 'Status',
            selectPumpStatus: 'Select Pump Status',
            urgencyLevel: 'Urgency Level',
            date: 'Date',
            editFault: 'Edit Fault',
            updateFault: 'Update',
            addNewFault: 'Create',
            pumpName: 'Pump Name',
            faultMissing: 'Please input a fault',
            statusMissing: 'Please select a status',
            pumpMissing: 'Please select a pump',
            urgencyMissing: 'Please input an urgency level',
            confirmDelete: 'Are you sure you want to delete this pump fault?',
            successfullyDeleted: 'Pump Fault Deleted Successfully',
            unsuccessfulDelete: 'Failed To Delete Pump Fault', 
            successfullyAdded: 'Successfully Added Pump Fault',
            unsuccessfulAdd: 'Failed to add Pump Fault',
            successfullyEdited: 'Successfully Edited Pump Fault',
            unsuccessfulEdit: 'Failed to edit pump fault'
        },
        // Pumps Maintenance 
        pumpsMaintenance: {
            total: 'Total Pump Maintenance',
            showAll: 'Show All',
            pending: 'Pending',
            fixing: 'Fixing',
            fixed: 'Fixed', 
            notFixed: 'Not Fixed',
            pumpStatus: 'Pump Status',
            title: 'Pump Maintenance',
            recordMaintenance: 'Record Maintenance',
            fault: 'Fault',
            selectFault: 'Select Fault',
            servicingCompany: 'Servicing Company',
            technicianName: 'Technician Name',
            remarks: 'Remark',
            findings: 'Findings',
            keyReturned: 'Key Returned',
            trueOrFalse: 'Select true or false',
            true: 'True',
            false: 'False',
            pumpFunctional: 'Pump Functional',
            date: 'Date',
            update: 'Update',
            create: 'Create',
            editMaintenance: 'Edit Maintenance',
            pumpName: 'Pump Name',
            technician: 'Technician',
            status: 'Status',
            faultMissing: 'Please select a pump fault',
            servicingMissing: 'Please input the servicing company',
            technicianMissing: `Please input the technician's name`,
            remarkMissing: 'Please input a remark',
            findingMissing: 'Please input findings about the pump',
            keyReturnedMissing: 'Please select true or false for key returned',
            pumpFunctionalMissing: 'Please select true or false for pump functional',
            confirmDelete: 'Are you sure you want to delete this pump maintenance?',
            successfullyDeleted: 'Successfully deleted Pump Maintenance',
            unsuccessfulDelete: 'Failed To Delete Pump Maintenance', 
            successfullyAdded: 'Successfully Added Pump Maintenance',
            unsuccessfulAdd: 'Failed to add Pump Maintenance',
            successfullyEdited: 'Successfully Updated Pump Maintenance',
            unsuccessfulEdit: 'Failed to edit pump maintenance'
        },
        // Sales Transactions
        salesTransactions: {
            totalTransactions: 'Total Transactions',
            showAll: 'Show All',
            productFilter: 'Product Filter',
            title: 'Sales Transactions',
            total: 'Total',
            transBtw: 'Retail Outlet sales transactions between',
            date: 'Date',
            pumpName: 'Pump Name',
            product: 'Product',
            openingReading: 'Opening Reading',
            closingReading: 'Closing Reading',
            totalDispensed: 'Total Dispensed',
            amount: 'Amount',
            viewTransactions: 'View Transactions'
        },
        // Settlement Account
        settlementAccount: {
            addNewAccount: 'Add New Bank Account',
            bankName: 'Bank Name',
            selectBankName: 'Select a Bank',
            accountName: 'Accout Name | ACCOUNT NAME',
            accountNumber: 'Account Number | ACCOUNT NUMBER',
            payTime: 'PAY TIME',
            endOfTheDay: 'At the end of the day',
            endOfDayValue: 'End of the day',
            minimumValue: 'Set a minimum value',
            setAValue: 'Set a value',
            createBankDetails: 'Create Bank Details',
            updateBankDetails: 'Update Bank Details',
            bankMissing: 'Please select a bank',
            payTimeMissing: 'Please choose a paytime',
            minValueMissing: 'Please set a minimum value',
            successfullyAdded: 'Successfully Added Bank Details',
            unsuccessfulAdd: 'Failed to add settlement account',
            successfullyUpdated: 'Sucessfully updated account details',
            unsuccessfulUpdate: 'Failed to update account details'
        },
        // Branch Station Management
        stationManagement: {
            product: 'PRODUCT', 
            price: 'PRICE',
            selectProduct: 'Select Product',
            enterNewPrice: 'Enter new price',
            updatePrice: 'Update Price',
            currentPrice: 'Current Price',
            currentlySellingAt: 'Currently selling at',
            priceMissing: 'Please input a new price',
            invalidPrice: 'Please input a valid amount',
            successfullyChanged: 'Successfully changed price'
        },
        // Tank Report
        tankReport: {
            title: 'Tank Reports',
            reportBetween: 'Tanks Report between',
            tankName: 'Tank Name',
            saleVolume: 'Sale Volume',
            volumeRefilled: 'Volume Refilled',
            openingVolume: 'Opening Volume',
            closingVolume: 'Closing Volume',
            volumeSold: 'Volume Sold', 
            volumeFilled: 'Volume Filled', 
            totalVolume: 'Total Volume (Litres)'
        }, 
        // Tanks 
        tanks: {
            title: 'Tanks',
            productVolume: 'Product Volume',
            tankCapacity: 'Tank Capacity',
            waterLevel: 'Water Level',
            details: 'Details',
            probeTransactions: 'Probe Transactions',
            noTanksAdded: 'No Tanks Added'
        },
        // Tank Details
        tankDetails: {
            title: 'Tank Details',
            ago: 'ago',
            productVolume: 'Product Volume',
            waterVolume: 'Water Volume',
            tankCapacity: 'Tank Capacity',
            waterLevel: 'Water Level',
            probeTransactions: 'Probe Transactions', 
            associatedPumps: 'Associated Pumps',
            currentReading: 'Current Reading',
            transactions: 'Transactions',
            graphTitle: 'Tank stock graph for the past seven(7) days',
            volumeLitres: 'Volume (Litres)'
        },
        // Probe Transactions
        probeTransactions: {
            title: 'Probe Transactions',
            transBetween: 'Probe Transactions between',
            transDate: 'Transaction Date',
            productHeight: 'Product Height',
            productVolume: 'Product Volume',
            temperature: 'Temperature',
            waterHeight: 'Water Height',
            waterVolume: 'Water Volume'
        },
        // Tanks Filled 
        tanksFilled: {
            title: 'Tanks Filled',
            tanksFilledOn: 'Tanks Filled On',
            tankName: 'Tank name',
            eVolumeDischarged: 'Epump Volume Discharged(ltr)',
            mVolumeDischarged: 'Manual Volume Discharged(ltr)',
            variance: 'Variance',
            eStartVolume: 'Epump Start Volume(ltr)',
            eVolumeEnd: 'Epump End Volume(ltr)',
            mStartVolume: 'Manual Start Volume(ltr)',
            mEndVolume: 'Manual End Volume(ltr)',
            startTime: 'Start Time',
            endTime: 'End Time',
            noTanksFilledOn: 'No Tanks Filled On'
        },
        // Branch Variance Report 
        bVarianceReport: {
            totalTransactions: 'Total Transactions',
            showAll: 'Show All',
            productFilter: 'Product Filter',
            title: 'Variance Report',
            eVolumeSold: 'Epump Volume Sold',
            mVolumeSold: 'Manual Volume Sold',
            variance: 'Variance',
            total: 'TOTAL',
            reportBetween: 'Variance Report Between',
            date: 'Date',
            product: 'Product',
            pumpName: 'Pump Name',
            eVolumeSoldLtr: 'Epump Volume Sold(ltr)',
            mVolumeSoldLtr: 'Manual Volume Sold(ltr)',
            varianceLtr: 'Variance(ltr)',
            eOpeningReading: 'Epump Opening Reading(ltr)',
            mOpeningReading: 'Manual Opening Reading(ltr)',
            eLastReading: 'Epump Last Reading(ltr)',
            mLastReading: 'Manual Last Reading(ltr)',
            viewTransactions: 'View Transactions'
        },
        // Customer Master Layout
        cusMasterLayout: {
            customer: 'CUSTOMER',
            dashboard: 'Dashboard',
            balance: 'Balance',
            voucher: 'Voucher',
            vehicles: 'Vehicles',
            drivers: 'Drivers',
            fuelConsumption: 'Fuel Consumption',
            consumption: 'Consumption',
            retainership: 'Retainership',
            outstandingPayments: 'Outstanding Payments',
            payments: 'Payments',
            subAccounts: 'Sub Accounts',
            profile: 'Profile',
            signOut: 'Sign Out',
            confirmLogout: 'Do you really want to logout?'
        },
        // Customer Dashboard
        cusDashboard: {
            balance: 'Balance',
            fuelPoints: 'Fuel Points',
            vehicles: 'Vehicles',
            fuelConsumed: 'Fuel Consumed',
            litres: 'Litres',
            vouchers: 'Vouchers',
            quickDetails: 'Quick Details',
            newVouchersGenerated: 'New vouchers generated',
            vouchersTransfered: 'Vouchers Transfered',
            vouchersExpired: 'Vouchers Expired',
            showMore: 'Show More',
            last10Trans: 'Last 5 Transactions',
            date: 'Date',
            status: 'Status',
            amount: 'Amount',
            remark: 'Remark',
            currentBalance: 'Current Balance', 
            showMore: 'Show More',
            drivers: 'Drivers', 
            subAccounts: 'Sub Accountss',
            fuelConsumptionStats: 'Fuel Consumption Statistics',
            totalVolume: 'Total Volume (Litres)'
        },
        // Customer Drivers
        drivers: {
            myDrivers: 'My Drivers',
            generateVouchers: 'Generate Vouchers For Drivers',
            sendVoucher: 'Create Voucher',
            printVoucher: 'Print Voucher(s)',
            wallet: 'Wallet', 
            bearer: 'Bearer',
            never: 'Never',
            sixHours: '6 Hours',
            twelveHours: '12 Hours',
            twentyFourHours: '24 Hours',
            sevenDays: '7 Days',
            thirtyDays: '30 Days',
            addDriver: 'Add Driver',
            createDriver: 'Create Driver',
            listOfDrivers: 'List of Drivers',
            name: 'Name',
            phone: 'Phone',
            email: 'Email',
            state: 'State',
            amount: 'Amount',
            balanceTo: 'Balance To',
            validity: 'Validity',
            driversName: `Driver's Name`,
            phoneNumber: 'Phone Number',
            driversCode: `Driver's Code`,
            address: 'Address',
            state: 'State',
            confirmDelete: 'Are you sure you want to delee the driver?',
            successfullyRemoved: 'Successfully removed driver',
            amountMissing: 'Please input an amount',
            balanceToMissing: 'Please select balance destination',
            validityMissing: 'Please select an expiry option',
            successfullySent: 'Voucher Sent Successfully',
            createVehicleVoucher: 'Voucher Created Successfully',
            amountZeroError: 'Amount cannot be zero',
            noDriverError: 'Select at least one(1) driver to continue',
            nameMissing: 'Please input a name',
            codeMissing: 'Please input a code',
            addressMissing: 'Please input an address',
            stateMissing: 'Please input a state',
            successfullyAdded: 'Successfully Added Driver',
        },
        // Customer Balance
        balance: {
            title: 'Balance',
            fundWallet: 'Fund Wallet',
            history: 'History',
            last10Trans: 'Last 10 Transactions',
            date: 'Date',
            status: 'Status',
            amount: 'Amount',
            remark: 'Remark',
            currentBalance: 'Current Balance',
            paymentConfirmation: 'Payment Confirmation',
        },
        // Previous Wallet Transactions
        previousTrans: {
            balance: 'Balance',
            transBetween: 'Transaction between',
            prevTransBtw: 'Previous Wallet Transactions between',
            date: 'Date',
            status: 'Status',
            amount: 'Amount',
            remark: 'Remark',
            currentBalance: 'Current Balance'
        },
        // Fuel Consumption index.uve and vehicle_fuel_consumption.vue 
        fuelConsumption: {
            table: 'Table',
            chart: 'Chart',
            title: 'Fuel Consumption',
            plateNumber: 'Plate Number',
            date: 'Date',
            driver: 'Driver',
            createdBy: 'Created By',
            volume: 'Volume',
            pricePerLitre: 'Price/Litre',
            voucher: 'Voucher',
            stationName: 'Station Name',
            fuelConsumptionStats: 'Fuel Consumption Statistics',
            totalVolume: 'Total Volume (Litres)',
        },
        // Customer Fund Wallet 
        fundWallet: {
            confirmingPayment: 'Confirming your payment...',
            paymentconfirmed: 'Payment Confirmed',
            errorConfirming: 'Error Confirming your payment, please try again.',
            bankTransfer: 'Bank Transfer',
            fundWithCard: 'Fund with Card',
            fundAccountWithCard: 'Fund your Account by paying with your card online',
            howMuch: 'How much would you like to fund your wallet with?',
            payNow: 'Pay Now',
            fundAccountWithBank: 'Fund your account by doing a bank transfer to the following bank details',
            accountName: 'Account Name',
            amount: 'Amount',
            remis: 'Remis',
            bankName: 'Bank Name',
            accountNumber: 'Account Number',
            processingFunding: 'Your Wallet would be funded within the next few minutes.',
            paymentConfirmed: 'Payment Confirmed!',
            paymentCompleted: 'Payment Completed',
            amountNotSet: 'Please input an amount'
        },
        // Outstanding Payments indev.vue and outstanding_payments.vue
        payments: {
            totalAmount: 'Total Amount',
            title: 'Outstanding Payments',
            makePayments: 'Make Payments',
            branchName: 'Branch Name',
            address: 'Address',
            accountName: 'Account Name',
            accountNumber: 'Account No.',
            bankName: 'Bank Name',
            amount: 'Amount',
            updateAccount: 'Update Account',
            viewTransactions: 'View Transactions',
            processingPayments: 'Processing Payment',
            amountToTransfer: 'Amount To Transfer',
            inputAmount: 'Input Amount',
            noAccountError: 'Please select at least one account to make payment to',
            amountMissing: 'Please input an amount for',
            amountLow: 'Please input an amount greater than 0 for',
            successfulPayment: 'Successfully Made Payment!',
        },
        // Wallet Transactions 
        cusWalletTransactions: {
            totalTransactions: 'Total Transactions',
            title: 'Wallet Transactions',
            transBetween: 'Wallet Transactions between',
            date: 'Date/Time',
            amount: 'Amount {currency}',
            source: 'Source',
            status: 'Status',
            walletBalance: 'Wallet Balance {currency}'
        },
        // Customer Profile
        cusProfile: {
            accountSettings: 'Account Settings',
            email: 'Email',
            firstName: 'First Name',
            lastName: 'Last Name',
            phoneNumber: 'Phone Number',
            editProfile: 'Edit Profile',
            changeYourPassword: 'Change Your Password',
            oldPassword: 'Old Password',
            newPassword: 'New Password',
            confirmPassword: 'Confirm Password',
            passwordMustContain: 'Password Must Contain',
            oneNumeric: 'One Numeric Character',
            specialCharacter: 'One Special Character',
            changePassword: 'Change Password',
            successfullyChanged: 'Successfully changed Password!',
            fillIn: 'Fill in the missing Fields', 
            updated: 'Profile updated successfully!',
            oldPasswordMissing: 'Please input your current password',
            passwordBlank: 'Password field cannot be blank',
            passwordsDontMatch: `Passwords don't match`,
            newPasswordMissing: 'Please input your new password',
            newPasswordShort: 'New password should be between 6 and 100 characters',
            confirmPasswordError: 'Please confirm your new password',
            passwordLackingError: 'New password should include at least one alphanumeric character and one special character'
        },
        // Customer Retainership
        cusRetainership: {
            title: 'Retainerships | RETAINERSHIP',
            balance: 'Balance',
            company: 'Company', 
            wallet: 'Wallet'
        },
        // Send Voucher 
        sendVoucher: {
            sendVoucherBy: 'Send Voucher By',
            voucherPin: 'Voucher Pin',
            voucherAmount: 'Voucher Amount',
            recipientEmail: 'Recipient Email',
            recipientPhone: 'Recipient Phone Number',
            message: 'Message',
            sendSms: 'Send SMS',
            sendMail: 'Send Mail',
            messageError: 'Please input a message',
            emailBlank: `Please input the recipient's email`,
            phoneNoBlank: `Please input recipient's phone number`,
            shortNo: `Recipient's Phone Number should be between 10 and 13 characters`,
            successfullySent: 'Voucher Sent Successfully'
        },
        // Sub Accounts
        subAccounts: {
            title: 'Sub-Accounts',
            createSubAccount: 'Create Sub-Account',
            email: 'Email',
            firstName: 'First Name',
            lastName: 'Last Name',
            phoneNumber: 'Phone Number',
            balance: 'Balance',
            details: 'Details',
            successfullyDeleted: 'Successfully deleted Sub-Account',
            confirmDelete: 'Are you sure you want to delete the this Sub Account?'
        },
        // Create Sub Account
        createSubAccount: {
            addSubAccount: 'Add Sub-Account',
            fillFields: 'Fill in the fields',
            email: 'email@email.com',
            firstName: 'First Name',
            lastName: 'Last Name',
            phoneNumber: 'Phone Number',
            successfullyCreated: 'Successfully created Sub-Account',
        },
        // Sub Account Details
        subAccountDetails: {
            title: 'Sub Account',
            vouchers: 'Vouchers', 
            transactions: 'Transactions',
            consumptions: 'Consumptions', 
            consumptionRecords: 'Consumption Records',
            transBetween: 'Transactions between',
            date: 'Date', 
            volume: 'Volume',
            pricePerLitre: 'Price/Litre',
            voucherAmount: 'Voucher Amount',
            voucher: 'Voucher',
            amountPaid: 'Amount Paid',
            stationName: 'Station Name',
            city: 'City', 
            state: 'State',
            status: 'Status',
            amount: 'Amount',
            remark: 'Remark',
            currentBalance: 'Current Balance',
            dateCreated: 'Date Created', 
            returnBalanceTo: 'Return Balance To',
            isUsed: 'Is Used',
            source: 'Source',
            expiryDate: 'Expiry Date'
        },
        // Vehicles
        vehicles: {
            myVehicles: 'My Vehicles',
            generateVouchers: 'Generate Vouchers for Vehicles',
            sendVoucher: 'Create',
            wallet: 'Wallet',
            bearer: 'Bearer',
            never: 'Never',
            sixHours: '6 Hours',
            twelveHours: '12 Hours',
            twentyFourHours: '24 Hours',
            sevenDays: '7 Days',
            thirtyDays: '30 Days',
            all: 'All',
            listOfVehicles: 'List of Vehicles',
            printVoucher: 'Print Voucher(s)',
            driver: 'Driver',
            vehicleType: 'Vehicle Type',
            carMake: 'Car Make',
            carModel: 'Car Model',
            modelYear: 'Model Year',
            plateNumber: 'Plate Number',
            cardNumber: 'Card Number',
            amount: 'Amount',
            balanceTo: 'Balance To',
            validity: 'Validity',
            canBeUsedIn: 'Can be used in',
            phoneNumber: 'Phone Number',
            amountMissing: 'Please input an amount',
            balanceToMissing: 'Please select balance destination',
            validityMissing: 'Please select an expiry option',
            usedInMissing: 'Please select where this voucher can be used',
            successfullySent: 'Voucher Sent Successfully',
            amountZeroError: 'Amount cannot be zero',
            noVehicleError: 'Please select at least one(1) vehicle to continue',
            fuelConsumed: 'Fuel Consumed'
        },
        // Create Vehicle
        createVehicle: {
            title: 'Create Vehicle',
            enterVehicleDetails: 'Enter Vehicle Details',
            selectVehicleType: 'Select Vehicle Type',
            carOrLorry: 'Car/Lorry',
            motorcycle: 'Motorcycle',
            selectVehicleMake: 'Select Vehicle Make',
            selectVehicleModel: 'Select Vehicle Model',
            title: 'Create Vehicle',
            plateNumberPlaceholder: 'Plate Number',
            fullName: 'Full Name',
            phoneNumber: 'Phone Number',
            modelYear: 'Model Year',
            plateNumberMissing: `Please input car's plate number`,
            fullNameMissing: `Please enter car owner's full name`,
            vehicleTypeMissing: 'Please select vehicle type',
            carMakeMissing: 'Please select vehicle make',
            carModelMissing: 'Please select vehicle model',
            modelYearMissing: 'Please input vehicle model year',
            successfullyCreated: 'Successfully Created Vehicle'
        },
        // Verify Receipt
        verifyReceipt: {
            title: 'VERIFY RECEIPT',
            verify: 'VERIFY',
            amount: 'Amount'
        },
        // Voucher
        voucher: {
            generated: 'Vouchers',
            transferred: 'Transferred',
            expired: 'Expired',
            transBetween: 'Transactions between',
            sendByMail: 'Send by Mail',
            sendBySms: 'Send by SMS',
            listOfVouchers: 'List of Vouchers',
            printVoucher: 'Print Voucher(s)',
            title: 'Voucher',
            dateCreated: 'Date Created',
            amount: 'Amount', 
            returnBalanceTo: 'Return Balance To',
            isUsed: 'Is Used',
            source: 'Source',
            expiryDate: 'Expiry Date',
            dateSent: 'Date Sent',
            bearer: 'Bearer',
            sentVia: 'Sent Via',
            successfullyPrinted: 'Successfully Printed Vouchers',
            selectAtLeast: 'Select at least one(1) voucher to continue'
        },
        // Create Voucher
        createVoucher: {
            createNew: 'Create New Voucher',
            completeAtLeast: 'Please complete at least one voucher to proceed, click the add  more button to add new voucher',
            amount: 'Amount',
            byHowMany: 'By How Many',
            returnBalanceTo: 'Return Balance To',
            expiry: 'Expiry',  
            canBeUsedIn: 'Can Be Used In',
            bearer: 'Bearer',
            wallet: 'Wallet',
            never: 'Never',
            sixHours: '6 Hours',
            twelveHours: '12 Hours',
            twentyFourHours: '24 Hours',
            sevenDays: '7 Days',
            thirtyDays: '30 Days',
            all: 'All',
            addMore: 'Add More',
            serviceCharge: 'Each Voucher attracts a service charge of {currency}',
            title: 'Create Voucher',
            amountInvalid: 'Please input a valid amount',
            lowVouchers: 'Number of vouchers to be generated cannot be less than 1',
            amountMissing: 'Please input an amount',
            vouchersNumberBlank: 'Numbers of vouchers to be generated field cannot be blank',
            successfullyCreated: 'Successfully Created Voucher'
        },
        // Account Confirmation
        accountConfirmation: {
            accountConfirmed: 'Account Confirmed',
            thankYou: 'Thank you for confirming your email.',
            confirmed: 'You can now login to enjoy the benefits that Epump has to offer.',
            inProcess: 'Email confirmation in process',
            login: 'Login',
            emailConfirmation: 'Email Confirmation',
            pleaseWait: 'Please wait while',
            weConfirm: 'we confirm your email',
            proceed: 'Proceed to login after',
            afterSuccessfulConfirmation: 'Email has been successfully confirmed.',
            signIn: 'Sign In | SIGN IN',
            email: 'Email',
            password: 'Password',
            passwordLackingError: 'Password should include at least one alphanumeric character and one special character',
            thanksForConfirming: 'Thanks for confirming your email, proceed to login',
            loginSuccessful: 'Login Successful',
            fillIn: 'Fill in the missing fields'
        },
        // Change Password
        changePassword: {
            changeYourPassword: 'Change Your Password',
            passwordMustContain: 'Password Must Contain',
            oneNumeric: 'One Numeric Character',
            specialCharacter: 'One Special Character',
            title: 'Change Password',
            enterDetails: 'Enter the details of your old password and your new password',
            toReset: 'To reset your password',
            inProcess: 'Email confirmation in process',
            oldPassword: 'Old Password',
            newPassword: 'New Password',
            confirmPassword: 'Confirm Password',
            oldPasswordMissing: 'Please input your current password',
            newPasswordMissing: 'Please input your new password',
            passwordLackingError: 'New password should include at least one alphanumeric character and one special character',
            newPasswordShort: 'New password should be between 6 and 100 characters',
            passwordsDontMatch: `Passwords don't match`,
            successfullyChanged: 'Successfully changed password',
            confirmPasswordError: 'Please confirm your password',
        },
        // Password Email Notifiaction
        passwordEmailNotification: {
            passwordReset: 'Password Reset',
            linkSent: 'A password reset link has been',
            sentToMail: 'sent to your mail',
            pleaseCheck: 'Please check your mail and click the reset',
            toReset: 'link to reset your password.',
            backToLogin: 'Back to Login'
        },
        // Password Reset Confirmation
        passwordResetConfirmation: {
            resetYourPassword: 'Reset your Password',
            passwordMustContain: 'Password Must Contain',
            oneNumeric: 'One Numeric Character',
            specialCharacter: 'One Special Character',
            resetPassword: 'Reset Password',
            enterDetails: 'Enter the details of your old password and your new password',
            toReset: 'to reset your password',
            pleaseWait: 'Please wait while we complete your password request!',
            email: 'Email',
            password: 'New Password',
            confirmPassword: 'Confirm New Password',
            confirmPasswordError: 'Please confirm your password',
            passwordLackingError: 'Password should include at least one alphanumeric character and one special character',
            passwordsDontMatch: `Passwords don't match`,
            resetCompleted: 'Password Reset completed, proceed to login',
            fillIn: 'Fill in the missing fields'
        },
        // Registration Completed
        registrationCompleted: {
            title: 'Registration Completed',
            linkSent: 'A confirmation link has been',
            sentToMail: 'sent to your mail',
            pleaseCheck: 'Please check your mail and click the confirmation',
            toConfirm: 'link to confirm your email address.',
            backToLogin: 'Back to Login'
        },
        // Reset Password
        resetPassword: {
            resetYourPassword: 'Reset Your Password',
            title: 'Reset Password',
            enterUserName: 'Enter your email address in the field in the left',
            sectionReset: 'section to reset your password',
            inProcess: 'Email confirmation in process',
            userName: 'Username',
            email: 'Email',
            linkSent: 'A Password Reset link has been sent to your email, click on it to complete password reset',
            userNameMissing: 'Please input a username'
        },
        // Login
        login: {
            selectALanguage: 'Select a language',
            selectACountry: 'Select a country',
            signIn: 'Sign In | SIGN IN',
            noAccount: `Don't have an account?`,
            signUp: 'Sign up | SIGN UP', 
            forgotPassword: 'Forgot Password?',
            hello: 'Hello',
            user: 'User!',
            keepConnected: 'To keep connected with us please',
            loginWith: 'login with your Account info',
            or: 'OR',
            enterDetails: 'Enter your personal details and start',
            yourJourney: 'your journey with us',
            createAccount: 'Create Account | CREATE ACCOUNT',
            passwordMustContain: 'Password Must Contain',
            oneNumeric: 'One Numeric Character',
            specialCharacter: 'One Special Character',
            haveAnAccount: 'Have an account?',
            email: 'Email',
            password: 'Password',
            phoneNumber: 'Phone Number',
            firstName: 'First Name', 
            lastName: 'Last Name',
            confirmPassword: 'Confirm Password',
            passwordLackingError: 'Password should include at least one alphanumeric character and one special character',
            successfullySignedUp: 'You have successfully signed up. Please check your mail for a confirmation link',
            loginSuccessful: 'Login Successful',
            confirmPasswordError: 'Please confirm your new password',
            passwordsDontMatch: `Passwords don't match`
        },
        /***** Modals */

        // Add Email To Branch
        addEmailToBranch: {
            mapUser: 'Map User To Retail Outlet',
            companyAdmin: 'Company Admin',
            branchManager: 'Branch Manager',
            customer: 'Customer',
            email: 'Email', 
            selectRole: 'Select Role',
            selectRoleError: 'Please select a role',
            successfullyMapped: 'Successfully mapped user to Retail Outlet'
        },
        // Company Domain
        companyDomain: {
            updateCompanyDomain: 'Update Company Domain',
            update: 'Update',
            title: 'Company Domain',
            domainMissing: 'Please input a Company Domain',
            successfullyUpdated: 'Successfully Updated Company Domain'
        },
        // Add Driver Modal
        addDriverModal: {
            title: 'Add Driver',
            firstName: 'First Name',
            lastName: 'Last Name', 
            email: 'Email',
            phoneNumber: 'Phone No.',
            successfullyAdded: 'Successfully Added Driver'
        },
        // Edit Driver Modal
        editDriverModal: {
            title: 'Edit Driver',
            firstName: 'First Name',
            lastName: 'Last Name', 
            email: 'Email',
            phoneNumber: 'Phone No.',
            successfullyEdited: 'Successfully Edited Driver'
        },
        // Mange Expenses - Edit Category
        editCategoryModal: {
            title: 'Edit Category',
            category: 'CATEGORY',
            categoryPlaceholder: 'Input Category',
            categoryMissing: 'Please input a category',
            successfullyEdited: 'Successfully edited Category',
            unsuccessfulEdit: 'Unable to Edit Category',
            sameCategoryError: 'Please input a different category from the current one'
        },
        // Order - Update Order Status
        updateOrderStatusModal: {
            setStatus: 'Set Order Status',
            comment: 'Comment',
            orderStatus: 'Order Status',
            driverAssigned: 'Driver Assigned',
            paymentPending: 'Payment Pending',
            paymentCompleted: 'Payment Completed',
            paymentConfirmed: 'Payment Confirmed',
            orderCompleted: 'Order Completed',
            orderAccepted: 'Order Accepted',
            orderRejected: 'Order Rejected',
            processing: 'Processing',
            inTransit: 'In Transit',
            arrived: 'Arrived',
            ownerAccepted: 'Owner Accepted',
            fillStarted: 'Fill Started',
            fillEnded: 'Fill Ended',
            title: 'Update Status',
            commentMissing: 'Please input a comment',
            successfullyUpdated: 'Successfully updated order status'
        },
        // Outstanding Payments - Edit Account Details Modal 
        editAccountDetailsModal: {
            updateDetails: 'Update Account Details',
            accountNumber: 'Account Number',
            bankName: 'Bank Name',
            selectBank: 'Select a bank',
            accountName: 'Account Name',
            accountBalance: 'Account Balance',
            title: 'Update Account',
            verifyAccount: 'Verify Account', 
            amount: 'Amount',
            accountNumberMissing: 'Please input an account number for',
            bankMissing: 'Please select a bank for',
            successfullyVerified: 'Successfully verified account',
            successfullyUpdated: 'Successfully Updated Account Details'
        },
        // Product
        editProductModal: {
            title: 'Edit Product',
            productName: 'Product Name',
            price: 'Price', 
            state: 'State', 
            localGov: 'Local Government',
            area: 'Area | Areas',
            lgaName: 'LGA Name', 
            deliveryHour: 'Delivery Hour',
            addMore: 'Add More',
            productNameMissing: 'Please input a product name',
            priceMissing: 'Please input a price',
            deliveryHourMissing: 'Please input a Delivery Hour',
            successfullyEdited: 'Successfully Edited Product'
        },
        // Retainership - Edit Credit Limit 
        editCreditLimit: {
            title: 'Edit Credit Limit',
            edit: 'Edit',
            creditLimit: 'Credit Limit',
            creditLimitMissing: 'Please input a credit limit',
            successfullyEdited: 'Successfully Edited Credit Limit',
            unsuccessfulEdit: 'Unable to edit Credit Limit'
        },
        // Shifts - Close Shifts
        closeShift: {
            title: 'Close Shift',
            description: 'DESCRIPTION',
            shiftDescription: 'Shift Description',
            closingReading: 'Closing Reading | CLOSING READING',
            closingReadingMissing: 'Please input a Closing Reading',
            shiftDescriptionMissing: 'Please input a shift Description',
            successfullyClosed: 'Successfully Closed Shift'
        }, 
        // Targets - Create Target 
        createTargetModal: {
            title: 'Create Target',
            monthlyTarget: 'Retail Outlet Daily Sales Target',
            salesProduct: 'SALES PRODUCT',
            selectAProduct: 'Select a product', 
            target: 'Target | TARGET',
            setTarget: 'Set Target',
            productMissing: 'Please select a product',
            targetMissing: 'Please input a target',
            successfullyAdded: 'Successfully Added Retail Outlet Target',
            targetExists: 'This product currently has a target, please edit target to change target'
        },
        // Targets - Edit Target 
        editTargetModal: {
            title: 'Edit Target',
            monthlyTarget: 'Retail Outlet Daily Sales Target',
            salesProduct: 'SALES PRODUCT',
            selectAProduct: 'Select a product', 
            target: 'Target | TARGET',
            productMissing: 'Please select a product',
            targetMissing: 'Please input a target',
            successfullyUpdated: 'Successfully Updated Retail Outlet Target',
            unsuccessfulUpdate: 'Unable to udpate target'
        },
        // Trucks - Add Truck
        addTruckModal: {
            title: 'Add Truck',
            name: 'Name',
            plateNumber: 'Plate Number',
            tankType: 'Tank Type',
            capacity: 'Capacity',
            nameMissing: 'Plese input a name', 
            plateNumberMissing: 'Please input a plate number',
            tankTypeMissing: 'Please input a tank type',
            capacityMissing: 'Please input a capacity',
            lowCapacity: 'Please input a capacity greater than 0',
            successfullyAdded: 'Successfully Added Truck'
        },
         // Trucks - Edit Truck
         editTruckModal: {
            title: 'Edit Truck',
            name: 'Name',
            plateNumber: 'Plate Number',
            tankType: 'Tank Type',
            capacity: 'Capacity',
            nameMissing: 'Plese input a name', 
            plateNumberMissing: 'Please input a plate number',
            tankTypeMissing: 'Please input a tank type',
            capacityMissing: 'Please input a capacity',
            successfullyEdited: 'Successfully Edited Truck'
        },
        // Vehicle - Edit Vehicle
        editVehicleModal: {
            title: 'Edit Vehicle',
            edit: 'Edit',
            driver: 'Driver | DRIVER', 
            phoneNumber: 'Phone Number | PHONE NUMBER',
            vehicleType: 'Vehicle Type | VEHICLE TYPE', 
            carMake: 'Car Make | CAR MAKE', 
            carModel: 'Car Model | CAR MODEL',
            modelYear: 'Model Year | MODEL YEAR', 
            plateNumber: 'Plate Number | PLATE NUMBER', 
            driverMissing: 'Please input a driver',
            vehicleTypeMissing: 'Plese input a Vehicle Type',
            carMakeMissing: 'Please input a Car Make',
            carModelMissing: 'Please input a Car Model',
            modelYearMissing: 'Please input a Model Year',
            plateNumberMissing: 'Please input a Plate Number',
            successfullyEdited: 'Successfully Edited Vehicle'
        },
        // Zone - Edit Zone
        editZone: {
            title: 'Edit Zone',
            zone: 'Zone | ZONE',
            zoneMissing: 'Please input a zone',
            successfullyEdited: 'Successfully edited zone',
            unsuccessfulEdit: 'Unable to edit zone'
        }, 
        // Retainership - Add New Retainerhip
        addNewRetainership: {
            title: 'Add New Retainership',
            firstName: 'First Name*',
            lastName: 'Last Name*',
            email: 'Email*',
            phoneNumber: 'Phone Number*',
            password: 'Password*',
            confirmPassword: 'Confirm Password*',
            openingBalance: 'Opening Balance',
            add: 'Add',
            successfullyAdded: 'Successfully Added Retainership',
            confirmPasswordMissing: 'Please confirm your password', 
            passwordsDontMatch: `Passwords don't match`
        },
        // Retainership - Add Existing
        addExisting: {
            title: 'Add Existing',
            email: 'Email',
            add: 'Add',
            successfullyAdded: 'Successfully Added Retainership'
        },
        // Fund Wallet Modal
        fundWalletModal: {
            confirmingPayment: 'Confirming your payment...',
            paymentconfirmed: 'Payment Confirmed',
            errorConfirming: 'Error Confirming your payment, please try again.',
            payOnline: 'Pay Online',
            fundWith: 'Fund your Wallet with?',
            fundViaBank: 'Fund Via Bank',
            payNow: 'Pay Now',
        },
        // Payment Confirmation
        paymentConfirmation: {
            openModal: 'Open Modal'
        },

        /***** Industrial Portal */

        // Industrial Master Layout  
        iMasterLayout: {
            dashboard: 'Dashboard',
            wallet: 'Wallet',
            walletBalance: 'Wallet Balance',
            transactionsDetails: 'Transactions Details',
            orderManagement: 'Order Management',
            reports: 'Reports',
            consumptionReport: 'Consumption Report',
            transactionHistory: 'Transaction History',
            tanksFilled: 'Tanks Filled',
            events: 'Events',
            maintenance: 'Maintenance',   
            addMaintenance: 'Add Maintenance',
            schedules: 'Schedules',
            hi: 'Hi',
            isRunningOn: 'is running on',
            signOut: 'Sign Out',
            confirmLogout: 'Do you really want to logout?',
        },

        // Industrial Dashboard
        iDashboard : {
            totalHoursOnPowerGrid: "Total Hours On Power Grid",
            totalHoursOnGenGrid: "Total Hours On Generator Grid",
            hours: 'hours',
            orderFor: 'Order for Diesel or Gas',
            order: 'Order',
            walletBalance: 'Wallet Balance',
            addFunds: 'Add Funds',
            currentVolume: 'Current Volume',
            maxVolume: 'Maximum Volume',
            totalConsumedToday: 'Total Volume Consumed Today',
            litres: 'Litres',
            hourlyUsage: 'Hourly Usage',
            dailyUsage: 'Daily Usage', 
            monthlyUsage: 'Monthly Usage',
            dailyUsageHours: 'Daily Usage (Hours)',
            hourlyUsageHours: 'Hourly Usage (Hours)',
            monthlyUsageHours: 'Monthly Usage (Hours)',
            totalTankDisplacement: 'Total Tank Displacement',
            totalTankDisplacementLitres: 'Total Tank Displacement (Litres)',
            logoutTip: "Sign Out"
        },

        // Industrial Events
        iEvents: {
            eventReport: 'Event Report',
            getToKnow: 'Get to know the daily events that occurred in your  building.',
            logBetween: 'Events log between',
            date: 'Date',
            event: 'Event',
            startTime: 'Start Time',
            endTime: 'End Time'
        },

        // Industrial Fund Wallet
        iFundWallet: {
            confirmingPayment: 'Confirming your payment...',
            paymentConfirmed: 'Payment Confirmed!',
            errorConfirming: 'Error Confirming your payment, Please try again.',
            fundWithCard: 'Fund with Card',
            wallet: 'Wallet',
            fundAccountWithCard: 'Fund your Account by paying with your card online',
            payNow: 'Pay Now',
            fundAccountWithWallet: 'Fund your account with your branch Wallet',
            amount: 'Amount',
            amountMissing: 'Please input an amount'
        },

        // Industrial Report
        iReport: {
            dailyReport: 'Daily Consumption Report',
            getReport: 'Get reports on your daily consumption.',
            consumptionBetween: 'Consumption between',
            totalHoursOnPowerGrid: 'Total Hours of Power Grid',
            hours: 'hours',
            totalHoursOnGenGrid: 'Total Hours of Generator',
            totalFuelConsumption: 'Total Fuel Consumption',
            litres: 'Litres',
            powerDistribution: 'Power Distribution',
            generator: 'Generator',
            powerGrid: 'Power Grid',
            dailyUsageChart: 'Daily Usage Chart',
            dailyUsageHours: 'Daily Usage (Hours)'
        },

        // Industrial Wallet Transactions
        iWalletTransactions: {
            title: 'Wallet Transactions',
            getReports: 'Get reports on your total wallet transactions',
            walletTransBtw: 'Wallet Transaction Between',
            amount: 'Amount {currency}',
            source: 'Source',
            status: 'Status',
            walletBalance: 'Wallet Balance {currency}'
        },

        // Industrial Wallet Balance
        iWalletBalance: {
            title: 'Wallet Balance',
            addFunds: 'Add Funds',
            totalExpenses: 'Total Expenses For The Past Seven (7) Days',
            transactionSummary: 'Transaction Summary',
            viewMore: 'View More',
            noTransaction: 'No Wallet Transactions Yet',
            amount: 'Amount {currency}',
            walletStatistics: 'Wallet Statistics',
            expenses: 'Expenses',
            income: 'Income'
        },

        // Track Order 
        iTrackOrder: {
            back: 'Back',
            statusUpdates: 'Status Updates',
            litres: 'Litres',
            from: 'FROM',
            to: 'TO',
            date: 'Date',
            comment: 'Comment',
            status: 'Status'
        },

        // Tanks Filled 
        iTanksFilled: {
            title: 'Tanks Filled',
            getReports: 'Get reports on the total tank transactions',
            tanksFilledOn: 'Tanks filled on',
            tankName: 'Tank Name',
            eVolumeDischarged: 'Epump Volume Discharged(ltr)',
            mVolumeDischarged: 'Manual Volume Discharged(ltr)',
            variance: 'Variance',
            eStartVolume: 'Epump Start Volume(ltr)',
            eVolumeEnd: 'Epump End Volume(ltr)',
            mStartVolume: 'Manual Start Volume(ltr)',
            mEndVolume: 'Manual End Volume(ltr)',
            startTime: 'Start Time',
            endTime: 'End Time',
            noTanksFilledOn: 'No Tanks Filled On'
        },

        // Tank Transactions
        iTankTransactions: {
            title: 'Tank Transaction Report',
            getReports: 'Get reports on the total tank transactions',
            tankReportBtw: 'Tanks Report between',
            name: 'Name',
            volumeConsumed: 'Volume Consumed',
            volumeRefilled: 'Volume Refilled',
            openingVolume: 'Opening Volume',
            closingVolume: 'Closing Volume',
            tanksReport: 'Tanks Report',
            totalVolume: 'Total Volume (Litres)',
            volumeSold: 'Volume Sold',
            volumeFilled: 'Volume Filled'
        },

        // Schedule Maintenance
        iScheduleMaintenance: {
            nextMaintenance: 'Next Maintenance',
            hi: 'Hi', 
            youCanFix: 'You can fix a date and and set a reminder to service your equipment',
            schedule: 'Schedule',
            facilityType: 'Facility Type',
            facilityName: 'Facility Name',
            status: 'Status',
            date: 'Date',
            dueDate: 'Due Date',
            countdown: 'Countdown',
            history: 'History',
            markAsDone: 'Mark As Done',
            hours: 'hours',
            day: 'day | days',
            expired: 'Expired',
            done: 'Done',
            pending: 'Pending'
        },

        // Maintenance History
        iMaintenanceHistory: {
            back: 'Back',
            title: 'History',
            nextMaintenance: 'Next Maintenance',
            countdown: 'Countdown',
            resolvedOn: 'Resolved on',
            at: 'at',
            cost: 'Cost',
            hours: 'hours',
            day: 'day | days',
            expired: 'Expired',
            done: 'Done',
            pending: 'Pending'
        },

        // Add Maintenance
        iAddMaintenance: {
            scheduleMaintenance: 'Schedule Maintenance',
            type: 'Type',
            facilityType: 'Select Facility Type',
            generator: 'Generator',
            tankSystem: 'Tank System',
            generatorName: 'Generator Name',
            description: 'Description',
            maintenanceDescription: 'Maintenance Description',
            resolved: 'Resolved',
            true: 'True',
            false: 'False',
            dueDate: 'Due Date',
            schedule: 'Schedule',
            facilityTypeMissing: 'Please select the facility type',
            generatorTypeNameMissing: 'Please input a generator type name',
            descriptionMissing: 'Please input a description',
            trueOrFalse: 'Please select true or false if resolved',
            successfullyAdded: 'Successfully Added Schedule'
        },

        // Request Diesel
        iRequestDiesel: {
            numberOfOrders: 'Number of Orders',
            hi: 'Hi',
            requestText: 'Diesel & LPG can be requested to be delivered to you.',
            requestDiesel: 'Request Diesel',
            date: 'Date',
            volume: 'Volume(Liters)',
            price: 'Price',
            product: 'Product',
            amount: 'Amount {currency}',
            status: 'Status',
            trackOrder: 'Track Order',
            completeOrder: 'Complete Order'
        },

        // Add Order & Complete Order
        iAddOrder: {
            confirmingPayment: 'Confirming your payment...',
            paymentConfirmed: 'Payment Confirmed!',
            errorConfirming: 'Error Confirming your payment, Please try again.',
            order: 'ORDER',
            shipping: 'SHIPPING',
            payment: 'PAYMENT',
            fullAddress: 'Full Address',
            station: 'Station',
            volume: 'Volume',
            product: 'Product',
            selectAProduct: 'Select product',
            addOrder: 'Add Order',
            pricePerLitre: 'Price Per Liter | Price/Ltr',
            amount: 'Amount',
            litreVolume: 'Liter Volume',
            litres: 'Liters',
            deliveryAddress: 'Delivery address',
            previous: 'Previous',
            next: 'Next',
            payWithCard: 'Pay with Card',
            wallet: 'Wallet',
            confirmAmount: 'Confirm amount and proceed to making your payment',
            payNow: 'Pay Now',
            walletDebited: 'Your branch Wallet Balance would be debited',
            successfullyAdded: 'Order Added Successfully, proceed to payment',
            unsuccessfulAdd: 'Failed to order',
            amountMissing: 'Please input an amount',
            addressMissing: 'Please input an address',
            stationMissing: 'Please input a station',
            volumeMissing: 'Please input a volume',
            productMissing: 'Please select a product to continue'
        },

        // Mark Maintenance
        iMarkMaintenance: {
            markAsDone: 'Mark As Done',
            totalCost: 'Total Cost Of Maintenance',
            inputAmount: 'Input Amount',
            comment: 'Comment',
            mark: 'Mark',
            amountMissing: 'Please input an amount',
            commentMissing: 'Please input a comment',
            successfullyCompleted: 'Maintenance completed Succesfully'
        }
    }
}   